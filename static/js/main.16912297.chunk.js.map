{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","name","email","Cardlist","monsters","map","id","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","console","log","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UAEI,qBAAKC,IAAI,WAAWC,IAAG,0CACvB,6BAAKH,EAAMI,QAAQC,OACnB,4BAAIL,EAAMI,QAAQE,YCJbC,G,MAAW,SAACP,GACrB,OACI,qBAAKC,UAAU,YAAf,SACMD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OAC/B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQM,WCJfC,G,MAAY,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,aACrC,OACI,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCyCPG,E,kDA7Cb,aAAc,IAAD,8BACX,gBAiBJH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAYF,EAAEG,OAAOC,SAjBnC,EAAKC,MAAQ,CACXd,SAAS,GACTW,YAAY,IAJH,E,qDAQf,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OACZA,EAASC,UACTF,MAAK,SAAAG,GAAK,OACV,EAAKT,SAAS,CACZV,SAASmB,S,oBAQb,WAAS,IAAD,EAC4BC,KAAKN,MAA/Bd,EADF,EACEA,SAAUW,EADZ,EACYA,YACZU,EAAmBrB,EAASsB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQC,KAAK0B,cAAcC,SAASb,EAAYY,kBAGlD,OADEE,QAAQC,IAAIL,GAEZ,sBAAK5B,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CACAW,YAAY,kBACZC,aAAce,KAAKf,eAEnB,cAAC,EAAD,CACAL,SAAUqB,W,GArCAM,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.16912297.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        {/* <img alt='monsters' src={`https://robohash.org/${props.monster.id}.png?set=set2&&size=180x180`}/> */}\r\n        <img alt='monsters' src={`https://robohash.org/90F.png?set=set1`}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Card } from '../card/card.component'; \r\nimport './card-list.style.css';\r\n\r\nexport const Cardlist = (props) => {\r\n    return(\r\n        <div className=\"card-list\">\r\n             {props.monsters.map(monster =>\r\n         <Card key={monster.id} monster={monster} />\r\n       )}\r\n        </div>\r\n    )   \r\n\r\n}","import React from 'react';\r\n\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange}) =>{ \r\n    return(\r\n        <input \r\n            className='search'\r\n            type='search' \r\n            placeholder={placeholder}\r\n            onChange={handleChange}\r\n        />\r\n    )\r\n    \r\n    \r\n}","import React,{ Component } from 'react';\r\nimport './App.css';\r\nimport { Cardlist } from './components/card-list/card-list.component';\r\nimport { SearchBox } from './components/search-box/search-box.component';\r\n\r\nclass App extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      monsters:[],\r\n      searchField:''\r\n    }\r\n\r\n}\r\ncomponentDidMount(){\r\n  fetch('https://jsonplaceholder.typicode.com/users')\r\n  .then(response => \r\n    response.json()\r\n  ).then(users => \r\n    this.setState({\r\n      monsters:users\r\n    })\r\n    )\r\n}\r\nhandleChange = (e) =>{\r\n  this.setState({ searchField:e.target.value })\r\n}\r\n\r\n  render(){\r\n    const { monsters, searchField } = this.state;\r\n    const filteredMonsters = monsters.filter(monster =>\r\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n      )\r\n      console.log(filteredMonsters)\r\n    return(\r\n      <div className='App'>\r\n        <h1> Monsters Rolodex </h1>\r\n        <SearchBox \r\n        placeholder='search monsters' \r\n        handleChange={this.handleChange } \r\n        />\r\n        <Cardlist \r\n        monsters={filteredMonsters} \r\n        />\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}